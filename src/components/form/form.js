import React from "react";
import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';
import {useFormik} from 'formik';
import { useDispatch } from "react-redux";
import {createUser, readUser} from "../../store/users/users.actions";
import {updateUser} from "../../store/users/users.actions";
// User Full
// Full user data returned by id.
// {
// id: string(autogenerated)
// title: string("mr", "ms", "mrs", "miss", "dr", "")
// firstName: string(length: 2-50)
// lastName: string(length: 2-50)
// gender: string("male", "female", "other", "")
// email: string(email)
// dateOfBirth: string(ISO Date - value: 1/1/1900 - now)
// registerDate: string(autogenerated)
// phone: string(phone number - any format)
// picture: string(url)
// location: object(Location)
// }
// Location
// Using only as a part of full user data.
// {
// street: string(length: 5-100)
// city: string(length: 2-30)
// state: string(length: 2-30)
// country: string(length: 2-30)
// timezone: string(Valid timezone value ex. +7:00, -1:00)
// }


function UserForm(props) {
    const dispatch = useDispatch();
    const edit = props.id !== 0
    let user_data = {}
    if (edit) {
        user_data = dispatch(readUser(props.id))
    }
    const formik = useFormik({
        initialValues: {
            title:edit?user_data.title:"",
            firstName:edit?user_data.firstName:'',
            lastName:edit?user_data.lastName:'',
            email:edit?user_data.email:'',
            // picture: edit? user_data.picture:''
        // initialValues: {
        //     title: "",
        //     firstName: "",
        //     lastName: "",
        //     gender: "",
        //     email: "",
        //     dateOfBirth: "",
        //     phone: "",
        //     picture: "",
        //     location: {
        //         street: "",
        //         city: "",
        //         state: "",
        //         country: "",
        //         timezone: "",
        //         }
        },
        onSubmit: values => {
            if (props.id === 0){
                // alert(JSON.stringify(values))
                dispatch(createUser(values))
                props.toggle()
            }
            else{
                dispatch(updateUser(props.id,values))
            }
        }
    })
    return (
        <Modal isOpen={props.modal} toggle={props.toggle} >
            <ModalHeader toggle={props.toggle} className="modalHeader" >
            { props.id? "Update" :"Register"}</ModalHeader>
            <ModalBody>
            <form onSubmit={formik.handleSubmit}>
               <label htmlFor="title">Title</label>
               <input id='title' name='title' onChange={formik.handleChange} value={formik.values.title}/>
               <label htmlFor="firstName">firstName</label>
               <input id='firstName' name='firstName' onChange={formik.handleChange} value={formik.values.firstName}/>
               <label htmlFor="lastName">lastName</label>
               <input id='lastName' name='lastName' onChange={formik.handleChange} value={formik.values.lastName}/>
               <label htmlFor="picture">email</label>
               <input id='email' name='email' onChange={formik.handleChange} value={formik.values.email}/>
                <ModalFooter>
                    <Button type="submit">
                    { props.id? "Update" :"Add user"}
                    </Button>{' '}
                    <Button onClick={props.toggle}>
                        Cancel
                    </Button>
                </ModalFooter>

                    </form>
                </ModalBody>
        </Modal>
    )
}

export default UserForm;